// CPP program to create an empty vector and push values one by one.

#include <bits/stdc++.h>

using namespace std;

int main()
{
    vector<int> vec1;

    std::cout<<"\n vec1.size() = "<<vec1.size();
    std::cout<<" vec1.capacity() = "<<vec1.capacity();
    std::cout<<" vec1.max_size() = "<<vec1.max_size()<<std::endl;
    vec1.push_back(10);
    for(auto element:vec1)
        std::cout<<" "<< element;
    
    std::cout<<"\n vec1.size() = "<<vec1.size();
    std::cout<<" vec1.capacity() = "<<vec1.capacity();
    std::cout<<" vec1.max_size() = "<<vec1.max_size()<<std::endl;
    vec1.push_back(20);
    for(auto element:vec1)
        std::cout<<" "<< element;
    
    std::cout<<"\n vec1.size() = "<<vec1.size();
    std::cout<<" vec1.capacity() = "<<vec1.capacity();
    std::cout<<" vec1.max_size() = "<<vec1.max_size()<<std::endl;
    vec1.push_back(40);
    for(auto element:vec1)
        std::cout<<" "<< element;
    
    std::cout<<"\n vec1.size() = "<<vec1.size();
    std::cout<<" vec1.capacity() = "<<vec1.capacity();
    std::cout<<" vec1.max_size() = "<<vec1.max_size()<<std::endl;
    vec1.push_back(50);
    for(auto element:vec1)
        std::cout<<" "<< element;
    
    std::cout<<"\n vec1.size() = "<<vec1.size();
    std::cout<<" vec1.capacity() = "<<vec1.capacity();
    std::cout<<" vec1.max_size() = "<<vec1.max_size()<<std::endl;
    vec1.push_back(60);
    for(auto element:vec1)
        std::cout<<" "<< element;

    std::cout<<"\n vec1.size() = "<<vec1.size();
    std::cout<<" vec1.capacity() = "<<vec1.capacity();
    std::cout<<" vec1.max_size() = "<<vec1.max_size()<<std::endl;
    
    return 0;
}


output:
 vec1.size() = 0 vec1.capacity() = 0 vec1.max_size() = 4611686018427387903                                              
 10                                                                                                                     
 vec1.size() = 1 vec1.capacity() = 1 vec1.max_size() = 4611686018427387903                                              
 10 20                                                                                                                  
 vec1.size() = 2 vec1.capacity() = 2 vec1.max_size() = 4611686018427387903                                              
 10 20 40                                                                                                               
 vec1.size() = 3 vec1.capacity() = 4 vec1.max_size() = 4611686018427387903                                              
 10 20 40 50                                                                                                            
 vec1.size() = 4 vec1.capacity() = 4 vec1.max_size() = 4611686018427387903                                              
 10 20 40 50 60                                                                                                         
 vec1.size() = 5 vec1.capacity() = 8 vec1.max_size() = 4611686018427387903 
